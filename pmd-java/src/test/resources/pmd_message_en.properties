#java.best.practices.AbstractClassWithoutAbstractMethod.rule.msg=Abstract Class Without Abstract Method
#java.best.practices.AbstractClassWithoutAbstractMethodRule.violation.msg = Abstract Class %s Without Abstract Method
#java.best.practices.AbstractClassWithoutAbstractMethodRule.rule.desc=The abstract class does not contain any abstract methods. An abstract class suggests an incomplete implementation, which is to be completed by subclasses implementing the abstract methods. If the class is intended to be used as a base class only (not to be instantiated directly) a protected constructor can be provided to prevent direct instantiation.